<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello Hexo]]></title>
    <url>%2F2018%2F09%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[终于有了自己的小天地^_^那么……先记录一个坑吧……##使用hexo-admin插件时，需要在配置文件_config.yml中新增如下的部分： 如上，官方给的示意图上的password_hash是md5密码，而hexo-admin却明确表示需要使用bcrypt密码。 于是，我用java、python分别生成了一波bcrypt加密后的password_hash（bcrypt的特性是每次生成的随机散列值都不！一！样！），然后怀着激动的心情将如下密文paste在_config.yml的password_hash位置上。 果不其然，出现了bug！ o(￣︶￣)o 不管使用哪一个随机散列，输入的密码和配置的bcrypt密码都不对应。 我百度啊百度，看到了这篇博客，恍然大悟，原来不同版本nodejs使用的hash算法不一样，自然和java、python等的hash算法也可能有所不同。 顺着博客指导的操作，我使用nodejs的bcrypt算法计算出了我password的hash值，paste到配置文件，在git bash中输入“hexo server -d” 问题解决了，完美登录！ 但是，我陷入了思考。 对同样的字符串，bcrypt每次生成的密码都是不一样的，那么后台的登录逻辑到底是什么样的呢？ 于是我查了bcrypt判定password和password_hash是否一致的算法，如下： 嗦嘎，原来是通过通过某种神秘算法，对我输入的password和预先配置好的password_hash进行计算，如果result==password_hash，那么匹配成功！ 不得不感叹，做密码学研究和信息安全的才是真大佬，这种神秘算法是怎么想出来的哟！ 妙啊]]></content>
  </entry>
</search>
